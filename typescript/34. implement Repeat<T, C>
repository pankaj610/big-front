
Implement Repeat<T, C> to return a tuple by repeating.

type A = Repeat<number, 3> // [number, number, number]
type B = Repeat<string, 2> // [string, string]
type C = Repeat<1, 1> // [1, 1]
type D = Repeat<0, 0> // []


--- Output ---



type Repeat<T, C extends number, Array extends T[] = []> = 
  C extends 0 ? Array :
    Array['length'] extends C ?
      Array :
         Repeat<T, C, [...Array, T]>; 

type A = Repeat<number, 3>;

